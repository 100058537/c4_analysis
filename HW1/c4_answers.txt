Conceptual Questions1. What is the purpose of the next() function, and how does it contribute to the compilationprocess?* The next() function performs lexical analysis by reading the source code character by character and converting it into tokens (e.g., keywords, operators, and literals). It simplifies the code for the parser to process in later stages.2. How does C4 handle symbol resolution (e.g., variables, functions)?* C4 resolves symbols (variables, functions) through token classification during lexical analysis and uses hashing to identify them. It handles basic symbol resolution but lacks advanced features like complex symbol tables or type checking.3. What are the limitations of C4 as a compiler? What features of C does it not support?* C4 supports a basic subset of C, lacking features like advanced type systems, heap memory management, function overloading, and optimizations. It also doesn't support dynamic memory allocation (malloc, free), and advanced C libraries.4. How does C4 achieve self-hosting (i.e., compiling itself)? What are the implications of this design?* C4 achieves self-hosting by compiling its own source code using its own compiler. This allows iterative improvement but limits advanced optimizations and increases complexity during initial setup.